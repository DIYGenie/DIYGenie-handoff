// deps: npm i express multer @supabase/supabase-js
import express from "express";
import multer from "multer";
import { createClient } from "@supabase/supabase-js";

const app = express();
const upload = multer({ storage: multer.memoryStorage() });

const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY);
const BUCKET = process.env.SUPABASE_BUCKET || "uploads";
const DECOR8_URL = "https://api.decor8.ai/generate_designs_for_room";

app.post("/api/projects/:id/preview", upload.single("image"), async (req, res) => {
  try {
    const projectId = req.params.id;
    const { prompt = "", room_type = "livingroom", design_style = "modern" } = req.body;
    if (!req.file) return res.status(400).json({ ok:false, error:"no image" });

    // 1) upload to Supabase (public bucket)
    const filePath = `uploads/${projectId}-${Date.now()}.jpeg`;
    const { error: upErr } = await supabase.storage.from(BUCKET).upload(filePath, req.file.buffer, {
      upsert: true, contentType: req.file.mimetype || "image/jpeg"
    });
    if (upErr) return res.status(500).json({ ok:false, error: upErr.message });

    const { data: pub } = supabase.storage.from(BUCKET).getPublicUrl(filePath);
    const input_image_url = pub.publicUrl;

    // 2) call Decor8
    const r = await fetch(DECOR8_URL, {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${process.env.DECOR8_API_KEY}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        input_image_url,
        room_type,
        design_style,
        num_images: 1,
        prompt,
        scale_factor: 2
      })
    });
    const data = await r.json();
    if (!r.ok) return res.status(502).json({ ok:false, error:data?.message || "decor8 failed", data });

    const preview_url =
      data.output_image_url || data.result?.url || data.images?.[0]?.url || null;
    if (!preview_url) return res.status(502).json({ ok:false, error:"no preview_url in response", data });

    // 3) save both URLs to projects
    const { error: dbErr } = await supabase
      .from("projects")
      .update({ input_image_url, preview_url })
      .eq("id", projectId);
    if (dbErr) return res.status(500).json({ ok:false, error: dbErr.message });

    res.json({ ok:true, project_id: projectId, input_image_url, preview_url });
  } catch (e) {
    res.status(500).json({ ok:false, error: e.message });
  }
});

export default app;
