Make these edits and restart:

1) index.js — ensure subscription updates/downgrades are handled.
- At top (or reuse existing):
  const PRICE_ID_CASUAL = process.env.CASUAL_PRICE_ID;
  const PRICE_ID_PRO    = process.env.PRO_PRICE_ID;
  const tierForPrice = id => id===PRICE_ID_CASUAL ? {tier:'casual',quota:5}
                       : id===PRICE_ID_PRO ? {tier:'pro',quota:25} : {tier:'free',quota:0};

- Inside webhook handler, log type:
  console.log('EVENT', event.type);

- Add/replace handlers:
  if (event.type.startsWith('customer.subscription.')) {
    const sub = event.data.object;
    const priceId = sub.items?.data?.[0]?.price?.id || sub.items?.data?.[0]?.plan?.id;
    const m = tierForPrice(priceId);
    const periodEndSec = sub.current_period_end || sub.current_period?.end || null;
    const currentPeriodEnd = periodEndSec ? new Date(periodEndSec*1000).toISOString() : null;

    await supabase.from('profiles').update({
      stripe_subscription_id: sub.id,
      stripe_subscription_status: sub.status,
      is_subscribed: sub.status === 'active',
      subscription_tier: m.tier,
      plan_quota_monthly: m.quota,
      plan_credits_used_month: 0,
      current_period_end: currentPeriodEnd,
    }).eq('stripe_customer_id', sub.customer);
  }
  if (event.type === 'customer.subscription.deleted') {
    const sub = event.data.object;
    await supabase.from('profiles').update({
      stripe_subscription_id: sub.id,
      stripe_subscription_status: 'canceled',
      is_subscribed: false,
      subscription_tier: 'free',
      plan_quota_monthly: 0
    }).eq('stripe_customer_id', sub.customer);
  }

2) createCheckout.js — allow PRO via flag:
- Set:
  const usePro = process.argv.includes('--pro');
  const priceId = usePro ? process.env.PRO_PRICE_ID : process.env.CASUAL_PRICE_ID;
  const session = await stripe.checkout.sessions.create({
    mode: 'subscription',
    line_items: [{ price: priceId, quantity: 1 }],
    client_reference_id: process.env.TEST_USER_ID,
    success_url: 'https://example.com/success',
    cancel_url: 'https://example.com/cancel'
  });
  console.log('Checkout URL:', session.url);

3) package.json — add scripts:
  "scripts": {
    "checkout:casual": "node createCheckout.js",
    "checkout:pro": "node createCheckout.js --pro",
    "start": "node index.js"
  }
